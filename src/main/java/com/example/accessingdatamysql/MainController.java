package com.example.accessingdatamysql;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/api") // This means URL's start with /api (after Application path)
public class MainController {

  @Autowired // This means to get the bean called dogRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private DogRepository dogRepository;

  @GetMapping(path="/all")
  public @ResponseBody Iterable<Dog> getAllDogs() {
    // This returns a JSON or XML with the dogs
    return dogRepository.findAll();
  }

  @GetMapping(path="/one")
  public @ResponseBody Iterable<Dog> getOneDog(@RequestParam String name) {
    // This returns a JSON or XML with the dogs
    return dogRepository.findByName(name);
  }

  @PostMapping(path="/add") // Map ONLY POST Requests
  public @ResponseBody String addNewDog (@RequestParam String name, @RequestParam String breed) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    // example: http://localhost:8080/api/add?name=Lucky&breed=Labrador

    Dog newDog = new Dog();
    newDog.setName(name);
    newDog.setBreed(breed);
    dogRepository.save(newDog);
    return "Saved";
  }

}